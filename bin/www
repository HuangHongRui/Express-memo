#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('express-memo:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '1234');   //使用当前提供的环境给定的PORT || 如没就用1234端口
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);                    //启动服务器              

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);                            //报错时执行
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {     //描述失败的系统调用|字符串
    throw error;                        //抛出错误
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':                      //(拒绝访问): 试图以被一个文件的访问权限禁止的方式访问一个文件
      console.error(bind + ' 拒绝访问,需要提升权限');
      process.exit(1);
      break;
    case 'EADDRINUSE':                  //(地址已被使用): 试图绑定一个服务器（net、http 或 https）到本地地址，但因另一个本地系统的服务器已占用了该地址而导致失败。
      console.error(bind + ' 端口被占用.');
      process.exit(1);                  //结束状态
      break;
    default:
      throw error;                      //抛错
  }
}

/**
 * 事件侦听器为HTTP服务器“侦听”事件。请求提升权限
 *****************************************/

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
